name: "Images build"

on:
  workflow_call:
    inputs:
      imagesToBuild:
        required: false
        type: string
        default: ''
      pushImages:
        required: false
        default: 'false'
        type: string

jobs:
  generate-build-matrix:
    name: Generate matrix for building images
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-changed.outputs.changes }}
    if: inputs.imagesToBuild != ''
    steps:
      - name: Install tools
        run: sudo apt-get install moreutils jo

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch modified images
        id: get-changed
        shell: bash
        run: |
          IFS=' ' read -a images <<< "${{ inputs.imagesToBuild }}"

          declare -a changes_array=()
          for app in "${images[@]}"; do
            while read -r channel
            do
              change="$(jo app="$app" channel="$channel")"
              changes_array+=($change)
            done < <(jq -r '.channels[] | .name' "./apps/$app/metadata.json5")
          done

          output="$(jo changes="$(jo -a ${changes_array[*]})")"
          echo "::set-output name=changes::${output}"

  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    needs:
      - generate-build-matrix
    if: inputs.imagesToBuild != ''
    strategy:
      matrix:
        image: ["${{ fromJson(needs.generate-build-matrix.outputs.matrix).changes }}"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Build and test image
        id: build-and-test
        uses: ./.github/actions/build-image
        with:
          app: ${{ matrix.image.app }}
          channel: ${{ matrix.image.channel }}
